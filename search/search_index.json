{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! Welcome to the ICESat-2 hackweek! We look forward to working with you in building an open and collaborative community as we explore the cryosphere using ICESat-2 datasets. Quick Links Here are some quick links to material for our upcoming June 2020 event: hackweek schedule : overview of our planned virtual events spanning June 8 - 18, 2020. preliminary work : everything you need to know to be ready for the hackweek. the Pangeo Hub : link for accessing the Pangeo deployment. Getting Help Decision Tree : figure to help you determine the best place to get help. What inspires the 2020 hackweek community? What is a hackweek? Hackweeks were originally designed by the University of Washington's eScience Institute , and they aim to provide a welcoming learning environment where you can learn new software tools, collaborate with colleagues, build community and make progress on specific projects. Our hackweek model is constantly evolving and we invite you actively participate as we experiment with new approaches and ideas. Why have a virtual hackweek? The 2020 coronavirus pandemic has required us to rethink and redesign how we offer hackweeks. Community building, networking and peer learning are core elements of our hackweek mission. As an organizing team we are exploring new ways that we can still achieve these goals in a virutal hackweek. We invite all participants to join us as we experiment in various ways, and to recognize that as a community we are all figuring this out as we go along. Roadmap This documentation will act as your primary resource for navigating the logistics, scheduling, tutorials and project work within the hackweek. Here is a general roadmap of our event: Introductory Session : We will begin our virtual time together with an introductory zoom call during which we will share our Code of Conduct and intentions for a positive Learning Community . We will take some time to connect with each other with some facilitated conversations. We will describe the Virtual Technology that we will be using and discuss virtual etiquette. Pre-event Tutorials : We will work through tutorials on Git/GitHub and Python/iPtyhon/Jupyter . Project Preparation : Just before our main hacking event, we will gather together virutally to pitch project ideas and begin to form project teams. We will also provide guidance on project expectations and on how to form healthy team interactions in a virtual setting. Hackweek : Our core event will be offered during the same week we intended to run our in-person hackweek, but will be scaled back to 4 days (June 15-18), and the daily duration will be shorter. Each day will begin with a tutorial session and group check-in, prior to an open hacking session. We will work with groups to schedule some time that most or all group members can work collaboratively. Members of our planning team will be available at designated times to work directly with each project. Surveys and Feedback : Immediately after the event we will do a group debriefing session: What went well? What could be improved next time? Post-event Tutorials : If time and energy permit, we will continue to co-create tutorials and educational opportunities after the event, especially for those who wish to dig into more advanced topics. We will try to offer regular office hours to follow up on core concepts. We can also explore ways to keep momentum going on projects. General Structure As an organizing team, our primary commit to participants is to create inclusive, positive learning spaces that are as accessible to as many participants as possible. Here are some ways we plan to do this: we will teach our core tutorials in two stages: we will offer a 60-90 minute training that will be recorded. Instructors will work through examples and there will be some interactive work. Participants unable to attend the live training can work through content at their own pace. each tutorial will be followed up with question-and-answer sessions. We will try to host several sessions per tutorial, depending on instructor availabilty. Peer-learning will be encouraged, and each session will be moderated. all tutorials will be created using interactive coding examples in Jupyter Notebooks all participants will have continuous access to a shared, web-accessible computational environment through the duration of the event. each zoom session will be moderated by at least two hackweek organizers. A professional facilitator will assist in designing and moderating many sessions, including the virtual project work. we will offer individual and group support mechanisms to help navigate technical and social challenges as they arise. we will check-in frequently with groups and individuals through virtual stand-ups, anonymous polling and other mechanisms in order to engage with people on all levels of proficiency we will have zoom spaces dedicated to social exchanges, music, art and other restorative activities we will take breaks and encourage self-care and rest","title":"Overview"},{"location":"#welcome","text":"Welcome to the ICESat-2 hackweek! We look forward to working with you in building an open and collaborative community as we explore the cryosphere using ICESat-2 datasets.","title":"Welcome!"},{"location":"#quick-links","text":"Here are some quick links to material for our upcoming June 2020 event: hackweek schedule : overview of our planned virtual events spanning June 8 - 18, 2020. preliminary work : everything you need to know to be ready for the hackweek. the Pangeo Hub : link for accessing the Pangeo deployment. Getting Help Decision Tree : figure to help you determine the best place to get help.","title":"Quick Links"},{"location":"#what-inspires-the-2020-hackweek-community","text":"","title":"What inspires the 2020 hackweek community?"},{"location":"#what-is-a-hackweek","text":"Hackweeks were originally designed by the University of Washington's eScience Institute , and they aim to provide a welcoming learning environment where you can learn new software tools, collaborate with colleagues, build community and make progress on specific projects. Our hackweek model is constantly evolving and we invite you actively participate as we experiment with new approaches and ideas.","title":"What is a hackweek?"},{"location":"#why-have-a-virtual-hackweek","text":"The 2020 coronavirus pandemic has required us to rethink and redesign how we offer hackweeks. Community building, networking and peer learning are core elements of our hackweek mission. As an organizing team we are exploring new ways that we can still achieve these goals in a virutal hackweek. We invite all participants to join us as we experiment in various ways, and to recognize that as a community we are all figuring this out as we go along.","title":"Why have a virtual hackweek?"},{"location":"#roadmap","text":"This documentation will act as your primary resource for navigating the logistics, scheduling, tutorials and project work within the hackweek. Here is a general roadmap of our event: Introductory Session : We will begin our virtual time together with an introductory zoom call during which we will share our Code of Conduct and intentions for a positive Learning Community . We will take some time to connect with each other with some facilitated conversations. We will describe the Virtual Technology that we will be using and discuss virtual etiquette. Pre-event Tutorials : We will work through tutorials on Git/GitHub and Python/iPtyhon/Jupyter . Project Preparation : Just before our main hacking event, we will gather together virutally to pitch project ideas and begin to form project teams. We will also provide guidance on project expectations and on how to form healthy team interactions in a virtual setting. Hackweek : Our core event will be offered during the same week we intended to run our in-person hackweek, but will be scaled back to 4 days (June 15-18), and the daily duration will be shorter. Each day will begin with a tutorial session and group check-in, prior to an open hacking session. We will work with groups to schedule some time that most or all group members can work collaboratively. Members of our planning team will be available at designated times to work directly with each project. Surveys and Feedback : Immediately after the event we will do a group debriefing session: What went well? What could be improved next time? Post-event Tutorials : If time and energy permit, we will continue to co-create tutorials and educational opportunities after the event, especially for those who wish to dig into more advanced topics. We will try to offer regular office hours to follow up on core concepts. We can also explore ways to keep momentum going on projects.","title":"Roadmap"},{"location":"#general-structure","text":"As an organizing team, our primary commit to participants is to create inclusive, positive learning spaces that are as accessible to as many participants as possible. Here are some ways we plan to do this: we will teach our core tutorials in two stages: we will offer a 60-90 minute training that will be recorded. Instructors will work through examples and there will be some interactive work. Participants unable to attend the live training can work through content at their own pace. each tutorial will be followed up with question-and-answer sessions. We will try to host several sessions per tutorial, depending on instructor availabilty. Peer-learning will be encouraged, and each session will be moderated. all tutorials will be created using interactive coding examples in Jupyter Notebooks all participants will have continuous access to a shared, web-accessible computational environment through the duration of the event. each zoom session will be moderated by at least two hackweek organizers. A professional facilitator will assist in designing and moderating many sessions, including the virtual project work. we will offer individual and group support mechanisms to help navigate technical and social challenges as they arise. we will check-in frequently with groups and individuals through virtual stand-ups, anonymous polling and other mechanisms in order to engage with people on all levels of proficiency we will have zoom spaces dedicated to social exchanges, music, art and other restorative activities we will take breaks and encourage self-care and rest","title":"General Structure"},{"location":"about/howtocontribute/","text":"How to Contribute Contribute lessons or content We encourage you to contribute to this resources site! One place you could easily contribute is by adding to our Vocabulary and Acronyms page . The page lists some of the terms encountered during the tutorials. Enrich this vocabulary by contributing to it so that it is up to date and useful for you! You can add more terms to the Vocabulary and Acronyms page (or add resources to other pages) by submitting a pull request to the GitHub project repository that contains the material for this website, as described in the steps below. Steps: Navigate to the learning-resources GitHub project Click on the Fork button, present at the right side top. This will create an exact copy of the repository under your GitHub username Navigate to the forked repository in your profile. It should look something like your-github-username/learning-resources Modify the docs/reference/VocabAcronyms.md file by adding your favourite terms to it! On the home page of the forked repository, click on the \"New Pull Request\" button. This should lead to a page showing changes in your forked repository (your-github-username/learning-resources) and icesat-2hackweek/learning-resources. Review the changes Click on the 'Create Pull Request' button This will redirect you to a template, where you need to describe the changes in your pull request (PR). Mention the title and description of the change and click on 'Create Pull Request' button. Post this, you just have to wait and watch! If your pull request gets approved, then Congratulations! you made a contribution to open source :D","title":"How to Contribute"},{"location":"about/howtocontribute/#how-to-contribute","text":"","title":"How to Contribute"},{"location":"about/howtocontribute/#contribute-lessons-or-content","text":"We encourage you to contribute to this resources site! One place you could easily contribute is by adding to our Vocabulary and Acronyms page . The page lists some of the terms encountered during the tutorials. Enrich this vocabulary by contributing to it so that it is up to date and useful for you! You can add more terms to the Vocabulary and Acronyms page (or add resources to other pages) by submitting a pull request to the GitHub project repository that contains the material for this website, as described in the steps below. Steps: Navigate to the learning-resources GitHub project Click on the Fork button, present at the right side top. This will create an exact copy of the repository under your GitHub username Navigate to the forked repository in your profile. It should look something like your-github-username/learning-resources Modify the docs/reference/VocabAcronyms.md file by adding your favourite terms to it! On the home page of the forked repository, click on the \"New Pull Request\" button. This should lead to a page showing changes in your forked repository (your-github-username/learning-resources) and icesat-2hackweek/learning-resources. Review the changes Click on the 'Create Pull Request' button This will redirect you to a template, where you need to describe the changes in your pull request (PR). Mention the title and description of the change and click on 'Create Pull Request' button. Post this, you just have to wait and watch! If your pull request gets approved, then Congratulations! you made a contribution to open source :D","title":"Contribute lessons or content"},{"location":"conduct/community/","text":"Learning Community Creating a positive learning community for inclusive innovation. What is a learning community? We believe that the complicated challenges emerging for scientists and society in the 21st century require us to go beyond traditional educational structures, and that fostering a welcoming learning community is one way we can address these challenges. For the purpose of our hackweeks, we define a learning community as a group of individuals who, motivated by an inherent curiosity and commitment to seeking the truth, freely choose to work together on something they care about. Our shared values What can each of us do to contribute to a healthy and thriving learning community? We intend to adhere to these core values, drawn from the Center for Scientific Collaboration and Community Engagement : We continuously strive to be inclusive Members of this community recognize that we can all contribute in making our shared spaces welcoming, accessible, and inclusive, and will not discriminate against others based on their social or cultural backgrounds or identities. We will work towards minimizing the effects of power imbalances and offering diverse ways to participate as the default, rather than the exception. We will do this by listening deeply, and by staying engaged and curious in other's perspectives, even during challenging conversations. We empower one another We believe in a culture of fluid collaboration and participation through which we empower one another to explore and exchange knowledge, resources, and opportunities as a community. We learn and share We will cultivate a space where we can learn from and grow with each other, and we make room for not knowing. We recognize that we are all students and teachers at the same time and we all bring skills and resources that we can share. We trust \u2013 and hold space for \u2013 one another We make an individual and shared commitment to cultivating hospitable community spaces founded on trust, open communication, and personal accountability. This commitment will support the expression of a range of emotional states including joy, vulnerability, and uncertainty, without fear of incurring harm. We express gratitude and recognition Giving thanks and acknowledgement for contributions, whether they be knowledge, experience, or other forms of support, is an important part of how we interact with each other. In tutorials, projects, group presentations and code repositories, we will set up a mutually-agreed upon system for attribution of ideas and effort. When in doubt, we will ask each other if they approve of the ways in which we plan to use and build on each other's ideas and content.","title":"Learning Community"},{"location":"conduct/community/#learning-community","text":"Creating a positive learning community for inclusive innovation. What is a learning community? We believe that the complicated challenges emerging for scientists and society in the 21st century require us to go beyond traditional educational structures, and that fostering a welcoming learning community is one way we can address these challenges. For the purpose of our hackweeks, we define a learning community as a group of individuals who, motivated by an inherent curiosity and commitment to seeking the truth, freely choose to work together on something they care about.","title":"Learning Community"},{"location":"conduct/community/#our-shared-values","text":"What can each of us do to contribute to a healthy and thriving learning community? We intend to adhere to these core values, drawn from the Center for Scientific Collaboration and Community Engagement :","title":"Our shared values"},{"location":"conduct/community/#we-continuously-strive-to-be-inclusive","text":"Members of this community recognize that we can all contribute in making our shared spaces welcoming, accessible, and inclusive, and will not discriminate against others based on their social or cultural backgrounds or identities. We will work towards minimizing the effects of power imbalances and offering diverse ways to participate as the default, rather than the exception. We will do this by listening deeply, and by staying engaged and curious in other's perspectives, even during challenging conversations.","title":"We continuously strive to be inclusive"},{"location":"conduct/community/#we-empower-one-another","text":"We believe in a culture of fluid collaboration and participation through which we empower one another to explore and exchange knowledge, resources, and opportunities as a community.","title":"We empower one another"},{"location":"conduct/community/#we-learn-and-share","text":"We will cultivate a space where we can learn from and grow with each other, and we make room for not knowing. We recognize that we are all students and teachers at the same time and we all bring skills and resources that we can share.","title":"We learn and share"},{"location":"conduct/community/#we-trust-and-hold-space-for-one-another","text":"We make an individual and shared commitment to cultivating hospitable community spaces founded on trust, open communication, and personal accountability. This commitment will support the expression of a range of emotional states including joy, vulnerability, and uncertainty, without fear of incurring harm.","title":"We trust \u2013 and hold space for \u2013 one another"},{"location":"conduct/community/#we-express-gratitude-and-recognition","text":"Giving thanks and acknowledgement for contributions, whether they be knowledge, experience, or other forms of support, is an important part of how we interact with each other. In tutorials, projects, group presentations and code repositories, we will set up a mutually-agreed upon system for attribution of ideas and effort. When in doubt, we will ask each other if they approve of the ways in which we plan to use and build on each other's ideas and content.","title":"We express gratitude and recognition"},{"location":"conduct/conduct/","text":"Code of Conduct Rules to ensure we offer a hospitable and inclusive event, and a list of resources for reporting violations. Overview The organizers of this event are dedicated to providing a harassment-free learning experience for everyone regardless of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, ethnicity, age or religion. Hackweek volunteers and organizers will step up to address harassment of participants and/or presenters in any form if we are direct witnesses. Definition of Harassment Harassment includes, but is not limited to: Verbal comments that discriminate on the basis of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, ethnicity, age, religion Sexual images in public spaces Deliberate intimidation, stalking, or following Harassing photography or recording Sustained disruption of talks or other events Inappropriate physical contact Unwelcome sexual attention Advocating for, or encouraging, any of the above behavior Expectations We expect participants and instructors to act in ways that support a learning community at all event venues and event-related social activities. We expect you to support collaboration and learning while participating in this community of practice. Participants asked to stop any harassing behavior are expected to comply immediately. Failure to comply may result in the participant being expelled from the event at the discretion of the organizers. Here are ways to provide feedback and insights or address unethical or unprofessional behavior at our event: If you feel comfortable contacting someone associated with our event, you may speak with one of the event organizers in person, send an e-mail to icesat@uw.edu, or contact an organizer on a private Slack channel. You may also submit an anonymous comment to our virtual comment box . If you have experienced or observed harassment, unethical or unprofessional behavior as described above (a violation of this code of conduct) and want to talk to someone not directly associated with our event about it, choose from these specialists below: Contact the Office of the Ombud, 206-543-6028, ombuds@uw.edu, www.uw.edu/ombud . For individuals who are uncertain about whether they want to pursue a formal complaint but would like to speak to someone about unethical or unprofessional behavior or some other challenging situations, the Ombud office provides a confidential, informal, and neutral resource for you. They can assist you with determining what, if any, course of action you would like to pursue and to navigate the different resources on campus. Speak up about discrimination to the University Complaint Investigation and Resolution Office (UCIRO), 206- 616-2028, uciro@uw.edu. Staff are available if you would like to file a formal complaint regarding discrimination. Speak up about sexual misconduct to the Title IX Office, 206-616-5334, tixinv@uw.edu, link . Staff are available if you would like to file a formal complaint regarding sexual misconduct.","title":"Code of Conduct"},{"location":"conduct/conduct/#code-of-conduct","text":"Rules to ensure we offer a hospitable and inclusive event, and a list of resources for reporting violations.","title":"Code of Conduct"},{"location":"conduct/conduct/#overview","text":"The organizers of this event are dedicated to providing a harassment-free learning experience for everyone regardless of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, ethnicity, age or religion. Hackweek volunteers and organizers will step up to address harassment of participants and/or presenters in any form if we are direct witnesses.","title":"Overview"},{"location":"conduct/conduct/#definition-of-harassment","text":"Harassment includes, but is not limited to: Verbal comments that discriminate on the basis of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, ethnicity, age, religion Sexual images in public spaces Deliberate intimidation, stalking, or following Harassing photography or recording Sustained disruption of talks or other events Inappropriate physical contact Unwelcome sexual attention Advocating for, or encouraging, any of the above behavior","title":"Definition of Harassment"},{"location":"conduct/conduct/#expectations","text":"We expect participants and instructors to act in ways that support a learning community at all event venues and event-related social activities. We expect you to support collaboration and learning while participating in this community of practice. Participants asked to stop any harassing behavior are expected to comply immediately. Failure to comply may result in the participant being expelled from the event at the discretion of the organizers. Here are ways to provide feedback and insights or address unethical or unprofessional behavior at our event: If you feel comfortable contacting someone associated with our event, you may speak with one of the event organizers in person, send an e-mail to icesat@uw.edu, or contact an organizer on a private Slack channel. You may also submit an anonymous comment to our virtual comment box . If you have experienced or observed harassment, unethical or unprofessional behavior as described above (a violation of this code of conduct) and want to talk to someone not directly associated with our event about it, choose from these specialists below: Contact the Office of the Ombud, 206-543-6028, ombuds@uw.edu, www.uw.edu/ombud . For individuals who are uncertain about whether they want to pursue a formal complaint but would like to speak to someone about unethical or unprofessional behavior or some other challenging situations, the Ombud office provides a confidential, informal, and neutral resource for you. They can assist you with determining what, if any, course of action you would like to pursue and to navigate the different resources on campus. Speak up about discrimination to the University Complaint Investigation and Resolution Office (UCIRO), 206- 616-2028, uciro@uw.edu. Staff are available if you would like to file a formal complaint regarding discrimination. Speak up about sexual misconduct to the Title IX Office, 206-616-5334, tixinv@uw.edu, link . Staff are available if you would like to file a formal complaint regarding sexual misconduct.","title":"Expectations"},{"location":"logistics/getting_help/","text":"Getting Help We know how overwhelming all of this information can be. And sometimes, things just don't work. We've put together this visual decision tree diagram to help you figure out where to turn for help first... and second... and beyond, depending on the type of issue you are having. This enables us all to maximize our learning and teaching throughout the Hackweek. The figure is also available as a Google Presentation , wherein the underlined text provides links to some resources that may be helpful.","title":"Getting Help"},{"location":"logistics/getting_help/#getting-help","text":"We know how overwhelming all of this information can be. And sometimes, things just don't work. We've put together this visual decision tree diagram to help you figure out where to turn for help first... and second... and beyond, depending on the type of issue you are having. This enables us all to maximize our learning and teaching throughout the Hackweek. The figure is also available as a Google Presentation , wherein the underlined text provides links to some resources that may be helpful.","title":"Getting Help"},{"location":"logistics/ourTeam/","text":"Our Team Jane Koh Affiliation : eScience Institute Ask me about : Zoom technical support Johan Nilsson Affiliation : Jet Propulsion Laboratory, NASA Ask me about : Jessica Scheick Affiliation : University of Maine Ask me about : icepyx Data Access Data Subsetting Geospatial Data Processing Python (basics) Git / GitHub Amy Steiker Affiliation : National Snow and Ice Data Center Ask me about : NSIDC Data Products ICESat-2 Data Access from NSIDC ICESat-2 Data Subsetting Services from NSIDC OpenAltimetry NASA Earthdata Lindsey Heagy Affiliation : U. C. Berkeley Ask me about : Fernando Perez Affiliation : Department of Statistics, UC Berkeley Ask me about : Git / GitHub Reproducible Science Jupyter PyData tools (NumPy, SciPy, matplotlib, Pandas) Numerical / scientific computing Ellen Buckley Affiliation : University of Maryland Ask me about : Fernando Paolo Affiliation : NASA Jet Propulsion Laboratory Ask me about : David Shean Affiliation : UW Civil and Environmental Engineering Ask me about : Geospatial data analysis Digital Elevation Models (DEMs) Python Jupyter Git and Github Ian Joughin Affiliation : APL Ask me about : Alek Petty Affiliation : University of Maryland Ask me about : Axel Schweiger Affiliation : APL Ask me about : Anthony Arendt Affiliation : eScience & APL Ask me about : team building, community software, administrative support Ben Smith Affiliation : APL Ask me about : Land-Ice Products Gridding Python Alex Huynh Affiliation : APL Ask me about : Matthew Siegfried Affiliation : Department of Geophysics, Colorado School of Mines Ask me about : Nick Holschuh Affiliation : Department of Geology, Amherst College Ask me about : The ICESat-2 Satellite Data Products Data Structures Python Scott Henderson Affiliation : eScience & ESS Ask me about : Python Conda Jupyter Pangeo / Cloud Computing Tom Neumann Affilation : NASA Goddard Space Flight Center Ask me about : Sebastian Alvis Affiliation : eScience & APL Ask me about : Jupyter (and specifically Connecting to the JupyterHub) Git / GitHub Pangeo / Cloud Computing Python Pandas Daniel Shapero Affiliation : APL Ask me about : Git Shell Python Generalized Geospatial Hackery Tyler Sutterley Affiliation : APL Ask me about : Git / GitHub Jupyter Python IceSat-2 Data Products Altimetry Zheng Liu Affiliation : APL Ask me about : icepyx Cloud / Sea Ice products","title":"Our Team"},{"location":"logistics/ourTeam/#our-team","text":"","title":"Our Team"},{"location":"logistics/ourTeam/#jane-koh","text":"Affiliation : eScience Institute Ask me about : Zoom technical support","title":"Jane Koh"},{"location":"logistics/ourTeam/#johan-nilsson","text":"Affiliation : Jet Propulsion Laboratory, NASA Ask me about :","title":"Johan Nilsson"},{"location":"logistics/ourTeam/#jessica-scheick","text":"Affiliation : University of Maine Ask me about : icepyx Data Access Data Subsetting Geospatial Data Processing Python (basics) Git / GitHub","title":"Jessica Scheick"},{"location":"logistics/ourTeam/#amy-steiker","text":"Affiliation : National Snow and Ice Data Center Ask me about : NSIDC Data Products ICESat-2 Data Access from NSIDC ICESat-2 Data Subsetting Services from NSIDC OpenAltimetry NASA Earthdata","title":"Amy Steiker"},{"location":"logistics/ourTeam/#lindsey-heagy","text":"Affiliation : U. C. Berkeley Ask me about :","title":"Lindsey Heagy"},{"location":"logistics/ourTeam/#fernando-perez","text":"Affiliation : Department of Statistics, UC Berkeley Ask me about : Git / GitHub Reproducible Science Jupyter PyData tools (NumPy, SciPy, matplotlib, Pandas) Numerical / scientific computing","title":"Fernando Perez"},{"location":"logistics/ourTeam/#ellen-buckley","text":"Affiliation : University of Maryland Ask me about :","title":"Ellen Buckley"},{"location":"logistics/ourTeam/#fernando-paolo","text":"Affiliation : NASA Jet Propulsion Laboratory Ask me about :","title":"Fernando Paolo"},{"location":"logistics/ourTeam/#david-shean","text":"Affiliation : UW Civil and Environmental Engineering Ask me about : Geospatial data analysis Digital Elevation Models (DEMs) Python Jupyter Git and Github","title":"David Shean"},{"location":"logistics/ourTeam/#ian-joughin","text":"Affiliation : APL Ask me about :","title":"Ian Joughin"},{"location":"logistics/ourTeam/#alek-petty","text":"Affiliation : University of Maryland Ask me about :","title":"Alek Petty"},{"location":"logistics/ourTeam/#axel-schweiger","text":"Affiliation : APL Ask me about :","title":"Axel Schweiger"},{"location":"logistics/ourTeam/#anthony-arendt","text":"Affiliation : eScience & APL Ask me about : team building, community software, administrative support","title":"Anthony Arendt"},{"location":"logistics/ourTeam/#ben-smith","text":"Affiliation : APL Ask me about : Land-Ice Products Gridding Python","title":"Ben Smith"},{"location":"logistics/ourTeam/#alex-huynh","text":"Affiliation : APL Ask me about :","title":"Alex Huynh"},{"location":"logistics/ourTeam/#matthew-siegfried","text":"Affiliation : Department of Geophysics, Colorado School of Mines Ask me about :","title":"Matthew Siegfried"},{"location":"logistics/ourTeam/#nick-holschuh","text":"Affiliation : Department of Geology, Amherst College Ask me about : The ICESat-2 Satellite Data Products Data Structures Python","title":"Nick Holschuh"},{"location":"logistics/ourTeam/#scott-henderson","text":"Affiliation : eScience & ESS Ask me about : Python Conda Jupyter Pangeo / Cloud Computing","title":"Scott Henderson"},{"location":"logistics/ourTeam/#tom-neumann","text":"Affilation : NASA Goddard Space Flight Center Ask me about :","title":"Tom Neumann"},{"location":"logistics/ourTeam/#sebastian-alvis","text":"Affiliation : eScience & APL Ask me about : Jupyter (and specifically Connecting to the JupyterHub) Git / GitHub Pangeo / Cloud Computing Python Pandas","title":"Sebastian Alvis"},{"location":"logistics/ourTeam/#daniel-shapero","text":"Affiliation : APL Ask me about : Git Shell Python Generalized Geospatial Hackery","title":"Daniel Shapero"},{"location":"logistics/ourTeam/#tyler-sutterley","text":"Affiliation : APL Ask me about : Git / GitHub Jupyter Python IceSat-2 Data Products Altimetry","title":"Tyler Sutterley"},{"location":"logistics/ourTeam/#zheng-liu","text":"Affiliation : APL Ask me about : icepyx Cloud / Sea Ice products","title":"Zheng Liu"},{"location":"logistics/schedule/","text":"Hackweek Schedule Note : Although the schedule is fairly set, we will still be making occasional updates to it, so please check back! You may wish to view our Google Calendar for the event. Time Zones All times listed below are UTC -7 (Pacific Daylight Time). You might want to consult this Time Zone Map to figure out times in your location. Monday June 8 9:00 to 10:30 AM: Introductory Session Lead Instructors: Anthony Arendt and Charley Haley Icebreaker Provide overall schedule Help people get connected Explain how will this be different from an in-person event Technology overview and check-in on accessibility Code of conduct and setting norms of positive learning environments Introduction to open-source and open science Slides for this talk 11:00 AM to 12:30 PM: ICESat-2 Mission: Satellite, Sensor, and Data Lead Instructor: Axel Schweiger Video recording of this session Welcome by the NASA Cryosphere Program Manager ( Thorsten Markus ) intro to the ICESat-2 mission ( Tom Neumann ) instrument design, measurement principles, ground tracks Slides for this talk ICESat-2 data products ( Ben Smith ) overview of product levels, names and potential science uses release schedule and products yet to be posted Slides for this talk Tuesday June 9 10:00-11:00 AM: Office hours have questions? Need help with the materials so far? Come chat with an instructor during office hours! Wednesday June 10 Hackweek activities will be cancelled in honor of the Strike for Black Lives and ShutDownSTEM Calls to Action. Wednesday's events have been rescheduled for Thursday, June 11. Thursday June 11 9:00 to 10:30 AM: Git and GitHub Lead Instructor: Fernando Perez Video recording of this session Clone this intro-git repository to your local directory to follow along during the tutorial. Slides for this lesson 11:00 to 12:30 AM: Jupyter and iPython Lead Instructor: Fernando Perez Video recording of this session Clone this intro-jupyter repository to your local directory to follow along during the tutorial. Slides for this lesson 12:30 to 1:00 PM: Office hours have questions? Need help with the materials so far? Come chat with an instructor during office hours! And of course get in touch on Slack too - we know the continuous sessions could make for a long day, so be sure to take care of yourself and don't feel like you need to attend every moment! Friday June 12 9:00 to 11:00 AM: overview of python / numpy / pandas / matplotlib / geospatial data processing Lead Instructor: David Shean Video recording of this session Clone this geospatial-analysis repository to your local directory to follow along during the tutorial. core Python tools we will be using throughout the Hackweek simple examples using data from the GLAS instrument 11:30 to 12:30 PM: Introduction to ICESat-2 Sea Ice and Land Ice Products and Data Access Video recording of this session Sea ice products: overview of products, algorithms, and parameters for sea ice investigations ( Lead Instructor: Alek Petty ) slides for the sea ice lesson Land ice products: overview of products, algorithms, and parameters for land ice investigations ( Lead Instructor: Ben Smith ) ICEsat-2 data access: basic data explore and visualization in OpenAltimetry ( Lead Instructors: Jessica Scheick and Amy Steiker ) slides for the data access lesson 1:00 to 2:00 PM: Introduction to Projects Lead Instructor: Axel Schweiger expectations and how to hack how will we break up into project groups on Monday overview of existing list of projects Examples of 2019 Hackweek Projects Monday June 15: Hack-day #1 Time Activity Lead 9:00 to 10:00 AM tutorial session: Programmatic ICESat-2 data access Jessica Scheick and Amy Steiker 10:30 to 11:30 AM tutorial session: Introduction to HDF5 and ICESat-2 data files Fernando Paolo 11:45 AM to 12:45 PM project formation Anthony Arendt 1:30 to 3:00 PM hacking (instructors available) Hacking can continue into other times depending on team availability. Video recording of data access session Video recording of data files session Tuesday June 16: Hack-day #2 Time Activity Lead 9:00-10:00 AM tutorial session (concurrent) Land ice applications Ben Smith 9:00-10:00 AM tutorial session (concurrent) Sea ice applications Ellen Buckley 10:15-11:00 AM tutorial session: Science data generation Johan Nilsson 11:15-11:45 AM Virtual stand-up Charley Haley 12:30 - 2:30 PM hacking (instructors available) Hacking can continue into other times depending on team availability. Video recording of land ice applications session Video recording of sea ice applications session Video recording of Science Data Generation session Wednesday June 17: Hack-day #3 Time Activity Lead 9:00-10:30 AM Machine learning Yara Mohajerani and Shane Grigsby 11:00-11:30 AM Virtual stand-up hacking (instructors available) 11:30 - 2:00 PM PDT Video recording of Machine Learning session Thursday June 18: Hack-day #4 and Presentations Time Activity 9:00-11:30 AM hacking (instructors available) 12:00 - 2:00 PM group presentations (via Zoom)","title":"Hackweek Schedule"},{"location":"logistics/schedule/#hackweek-schedule","text":"Note : Although the schedule is fairly set, we will still be making occasional updates to it, so please check back! You may wish to view our Google Calendar for the event.","title":"Hackweek Schedule"},{"location":"logistics/schedule/#time-zones","text":"All times listed below are UTC -7 (Pacific Daylight Time). You might want to consult this Time Zone Map to figure out times in your location.","title":"Time Zones"},{"location":"logistics/schedule/#monday-june-8","text":"","title":"Monday June 8"},{"location":"logistics/schedule/#900-to-1030-am-introductory-session","text":"Lead Instructors: Anthony Arendt and Charley Haley Icebreaker Provide overall schedule Help people get connected Explain how will this be different from an in-person event Technology overview and check-in on accessibility Code of conduct and setting norms of positive learning environments Introduction to open-source and open science Slides for this talk","title":"9:00 to 10:30 AM: Introductory Session"},{"location":"logistics/schedule/#1100-am-to-1230-pm-icesat-2-mission-satellite-sensor-and-data","text":"Lead Instructor: Axel Schweiger Video recording of this session Welcome by the NASA Cryosphere Program Manager ( Thorsten Markus ) intro to the ICESat-2 mission ( Tom Neumann ) instrument design, measurement principles, ground tracks Slides for this talk ICESat-2 data products ( Ben Smith ) overview of product levels, names and potential science uses release schedule and products yet to be posted Slides for this talk","title":"11:00 AM to 12:30 PM: ICESat-2 Mission: Satellite, Sensor, and Data"},{"location":"logistics/schedule/#tuesday-june-9","text":"","title":"Tuesday June 9"},{"location":"logistics/schedule/#1000-1100-am-office-hours","text":"have questions? Need help with the materials so far? Come chat with an instructor during office hours!","title":"10:00-11:00 AM: Office hours"},{"location":"logistics/schedule/#wednesday-june-10","text":"Hackweek activities will be cancelled in honor of the Strike for Black Lives and ShutDownSTEM Calls to Action. Wednesday's events have been rescheduled for Thursday, June 11.","title":"Wednesday June 10"},{"location":"logistics/schedule/#thursday-june-11","text":"","title":"Thursday June 11"},{"location":"logistics/schedule/#900-to-1030-am-git-and-github","text":"Lead Instructor: Fernando Perez Video recording of this session Clone this intro-git repository to your local directory to follow along during the tutorial. Slides for this lesson","title":"9:00 to 10:30 AM: Git and GitHub"},{"location":"logistics/schedule/#1100-to-1230-am-jupyter-and-ipython","text":"Lead Instructor: Fernando Perez Video recording of this session Clone this intro-jupyter repository to your local directory to follow along during the tutorial. Slides for this lesson","title":"11:00 to 12:30 AM: Jupyter and iPython"},{"location":"logistics/schedule/#1230-to-100-pm-office-hours","text":"have questions? Need help with the materials so far? Come chat with an instructor during office hours! And of course get in touch on Slack too - we know the continuous sessions could make for a long day, so be sure to take care of yourself and don't feel like you need to attend every moment!","title":"12:30 to 1:00 PM: Office hours"},{"location":"logistics/schedule/#friday-june-12","text":"","title":"Friday June 12"},{"location":"logistics/schedule/#900-to-1100-am-overview-of-python-numpy-pandas-matplotlib-geospatial-data-processing","text":"Lead Instructor: David Shean Video recording of this session Clone this geospatial-analysis repository to your local directory to follow along during the tutorial. core Python tools we will be using throughout the Hackweek simple examples using data from the GLAS instrument","title":"9:00 to 11:00 AM: overview of python / numpy / pandas / matplotlib / geospatial data processing"},{"location":"logistics/schedule/#1130-to-1230-pm-introduction-to-icesat-2-sea-ice-and-land-ice-products-and-data-access","text":"Video recording of this session Sea ice products: overview of products, algorithms, and parameters for sea ice investigations ( Lead Instructor: Alek Petty ) slides for the sea ice lesson Land ice products: overview of products, algorithms, and parameters for land ice investigations ( Lead Instructor: Ben Smith ) ICEsat-2 data access: basic data explore and visualization in OpenAltimetry ( Lead Instructors: Jessica Scheick and Amy Steiker ) slides for the data access lesson","title":"11:30 to 12:30 PM: Introduction to ICESat-2 Sea Ice and Land Ice Products and Data Access"},{"location":"logistics/schedule/#100-to-200-pm-introduction-to-projects","text":"Lead Instructor: Axel Schweiger expectations and how to hack how will we break up into project groups on Monday overview of existing list of projects Examples of 2019 Hackweek Projects","title":"1:00 to 2:00 PM: Introduction to Projects"},{"location":"logistics/schedule/#monday-june-15-hack-day-1","text":"Time Activity Lead 9:00 to 10:00 AM tutorial session: Programmatic ICESat-2 data access Jessica Scheick and Amy Steiker 10:30 to 11:30 AM tutorial session: Introduction to HDF5 and ICESat-2 data files Fernando Paolo 11:45 AM to 12:45 PM project formation Anthony Arendt 1:30 to 3:00 PM hacking (instructors available) Hacking can continue into other times depending on team availability. Video recording of data access session Video recording of data files session","title":"Monday June 15: Hack-day #1"},{"location":"logistics/schedule/#tuesday-june-16-hack-day-2","text":"Time Activity Lead 9:00-10:00 AM tutorial session (concurrent) Land ice applications Ben Smith 9:00-10:00 AM tutorial session (concurrent) Sea ice applications Ellen Buckley 10:15-11:00 AM tutorial session: Science data generation Johan Nilsson 11:15-11:45 AM Virtual stand-up Charley Haley 12:30 - 2:30 PM hacking (instructors available) Hacking can continue into other times depending on team availability. Video recording of land ice applications session Video recording of sea ice applications session Video recording of Science Data Generation session","title":"Tuesday June 16: Hack-day #2"},{"location":"logistics/schedule/#wednesday-june-17-hack-day-3","text":"Time Activity Lead 9:00-10:30 AM Machine learning Yara Mohajerani and Shane Grigsby 11:00-11:30 AM Virtual stand-up hacking (instructors available) 11:30 - 2:00 PM PDT Video recording of Machine Learning session","title":"Wednesday June 17: Hack-day #3"},{"location":"logistics/schedule/#thursday-june-18-hack-day-4-and-presentations","text":"Time Activity 9:00-11:30 AM hacking (instructors available) 12:00 - 2:00 PM group presentations (via Zoom)","title":"Thursday June 18: Hack-day #4 and Presentations"},{"location":"logistics/technology/","text":"Learning Technologies Virtual Tools Zoom will be the main platform we will be using for tutorials, office hours and question-and-answer sessions. We will be asking project teams to set up their own platforms for interactive hacking. We will have technical support people available to assist. What if I am not permitted to use these tools? We recognize that some employeers and agencies do not allow people to use Zoom. At this time we have not been able to find any other universally-accessible platform to replace Zoom. We encourage you to contact us if you are concerned about your ability to access our event. Will my laptop work for this hackathon? All participants will be required to have their own laptop. The absolute minimum requirement is any laptop with a functioning web browser so that you can access our shared cloud computing resources. We will also teach you to install software on your own computer. For that we recommend the following: Windows Vista or newer, MAC OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) 32-bit or 64-bit Minimum 3 GB disk space to download and install software If you do not have a laptop, please contact us and we might be able to loan you one during the event. Will I need to learn a specific programming language to participate? We welcome all participants regardless of their programming background. In order to teach our content in a consistent way we need to select one programming languge. We have chosen Python because it is free and open source, and has many libraries suitable for efficient manipulation of a variety of different types of data. What can I do in advance to prepare? We require all participants to work through the following lessons in advance of our event. The lessons are brief and will ensure that we are all set up and ready to work when we arrive. Setting up your laptop and getting access to computing resources Introduction to Github : setting up a GitHub account Connecting to JupyterHub : connecting to our shared cloud computing environment Introduction to Conda : installing Python on your laptop NASA Earthdata : getting a NASA Earthdata login How do I ask questions about the Hackweek? If you have technical or general questions about the Hackweek, we are here to help. First, you can use the General channel on Slack .","title":"Learning Technologies"},{"location":"logistics/technology/#learning-technologies","text":"","title":"Learning Technologies"},{"location":"logistics/technology/#virtual-tools","text":"Zoom will be the main platform we will be using for tutorials, office hours and question-and-answer sessions. We will be asking project teams to set up their own platforms for interactive hacking. We will have technical support people available to assist.","title":"Virtual Tools"},{"location":"logistics/technology/#what-if-i-am-not-permitted-to-use-these-tools","text":"We recognize that some employeers and agencies do not allow people to use Zoom. At this time we have not been able to find any other universally-accessible platform to replace Zoom. We encourage you to contact us if you are concerned about your ability to access our event.","title":"What if I am not permitted to use these tools?"},{"location":"logistics/technology/#will-my-laptop-work-for-this-hackathon","text":"All participants will be required to have their own laptop. The absolute minimum requirement is any laptop with a functioning web browser so that you can access our shared cloud computing resources. We will also teach you to install software on your own computer. For that we recommend the following: Windows Vista or newer, MAC OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) 32-bit or 64-bit Minimum 3 GB disk space to download and install software If you do not have a laptop, please contact us and we might be able to loan you one during the event.","title":"Will my laptop work for this hackathon?"},{"location":"logistics/technology/#will-i-need-to-learn-a-specific-programming-language-to-participate","text":"We welcome all participants regardless of their programming background. In order to teach our content in a consistent way we need to select one programming languge. We have chosen Python because it is free and open source, and has many libraries suitable for efficient manipulation of a variety of different types of data.","title":"Will I need to learn a specific programming language to participate?"},{"location":"logistics/technology/#what-can-i-do-in-advance-to-prepare","text":"We require all participants to work through the following lessons in advance of our event. The lessons are brief and will ensure that we are all set up and ready to work when we arrive.","title":"What can I do in advance to prepare?"},{"location":"logistics/technology/#setting-up-your-laptop-and-getting-access-to-computing-resources","text":"Introduction to Github : setting up a GitHub account Connecting to JupyterHub : connecting to our shared cloud computing environment Introduction to Conda : installing Python on your laptop NASA Earthdata : getting a NASA Earthdata login","title":"Setting up your laptop and getting access to computing resources"},{"location":"logistics/technology/#how-do-i-ask-questions-about-the-hackweek","text":"If you have technical or general questions about the Hackweek, we are here to help. First, you can use the General channel on Slack .","title":"How do I ask questions about the Hackweek?"},{"location":"logistics/today/","text":"Daily ICESat-2 Hackweek Page Thursday June 18: Hack-day #4 and Presentations Time Activity 9:00-11:30 AM hacking (instructors available) 12:00 - 12:15 PM Assimilation 12:15 - 12:30 PM unsupervised 12:30 - 12:45 PM Seasonal Snow 12:45 - 1:00 PM FirnAndMelt 1:00 - 1:15 PM leading_to_phytoplankton 1:15 - 1:30 PM icepyx 1:30 - 1:45 PM BREAK 1:45 - 2:00 PM CloudMask 2:00 - 2:15 PM overcast 2:15 - 2:30 PM crossovers 2:30 - 2:45 PM surface_velocity 2:45 - 3:00 PM closing comments 3:00 - ? informal virtual gathering","title":"Today's Activitites"},{"location":"logistics/today/#daily-icesat-2-hackweek-page","text":"","title":"Daily ICESat-2 Hackweek Page"},{"location":"logistics/today/#thursday-june-18-hack-day-4-and-presentations","text":"Time Activity 9:00-11:30 AM hacking (instructors available) 12:00 - 12:15 PM Assimilation 12:15 - 12:30 PM unsupervised 12:30 - 12:45 PM Seasonal Snow 12:45 - 1:00 PM FirnAndMelt 1:00 - 1:15 PM leading_to_phytoplankton 1:15 - 1:30 PM icepyx 1:30 - 1:45 PM BREAK 1:45 - 2:00 PM CloudMask 2:00 - 2:15 PM overcast 2:15 - 2:30 PM crossovers 2:30 - 2:45 PM surface_velocity 2:45 - 3:00 PM closing comments 3:00 - ? informal virtual gathering","title":"Thursday June 18: Hack-day #4 and Presentations"},{"location":"preliminary/conda/","text":"Python Installation Overview What happens after the event when you want to go home and work with all the libraries ? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive. Python Software Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. What is Conda? Conda is an open source package and environment management system for installing multiple versions of software packages, their dependencies and switching easily between them. Conda works with many programming languages but is very popular in the python community. It works on Linux, OS X and Windows. Installing Miniconda Windows Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings. Linux and OS X You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes Installing Anaconda (Optional) If you don't want all of Anaconda If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek.* Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here . To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda . If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ... Installing Python We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the bash shell, if this is not already your default shell, you need to set it to be so (use the chsh -s /bin/bash command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands ( /bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Python installation"},{"location":"preliminary/conda/#python-installation","text":"","title":"Python Installation"},{"location":"preliminary/conda/#overview","text":"What happens after the event when you want to go home and work with all the libraries ? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive.","title":"Overview"},{"location":"preliminary/conda/#python-software","text":"Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on.","title":"Python Software"},{"location":"preliminary/conda/#what-is-conda","text":"Conda is an open source package and environment management system for installing multiple versions of software packages, their dependencies and switching easily between them. Conda works with many programming languages but is very popular in the python community. It works on Linux, OS X and Windows.","title":"What is Conda?"},{"location":"preliminary/conda/#installing-miniconda","text":"","title":"Installing Miniconda"},{"location":"preliminary/conda/#windows","text":"Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings.","title":"Windows"},{"location":"preliminary/conda/#linux-and-os-x","text":"You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes","title":"Linux and OS X"},{"location":"preliminary/conda/#installing-anaconda-optional","text":"If you don't want all of Anaconda If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek.* Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here . To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda . If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ...","title":"Installing Anaconda (Optional)"},{"location":"preliminary/conda/#installing-python","text":"We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the bash shell, if this is not already your default shell, you need to set it to be so (use the chsh -s /bin/bash command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands ( /bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Installing Python"},{"location":"preliminary/earthdata/","text":"Earthdata Login Overview One of our earliest tutorials involves learning how to download ICESat-2 data directly from NASA's data portals. NASA maintains a number of different portals, but we'll be using the Earthdata portal. NASA Earthdata provides a convenient web map interface to a wide range of NASA earth observations. The data are stored at one of several Distributed Active Archive Centers (DAACs). We will be accessing ICESat-2 data from the National Snow and Ice Data Center DAAC. Why do I need an Earthdata login? Each participant will need a login. We will be teaching you ways to programmatically access ICESat-2 data from within your Python scripts. You will need to enter your Earthdata username and password in order for this to work. Getting an Earthdata login If you do not already have an Earthdata login, then navigate to the Earthdata Login page: Enter a username and password, and then record this somewhere for use during the data access tutorial.","title":"Earthdata login"},{"location":"preliminary/earthdata/#earthdata-login","text":"","title":"Earthdata Login"},{"location":"preliminary/earthdata/#overview","text":"One of our earliest tutorials involves learning how to download ICESat-2 data directly from NASA's data portals. NASA maintains a number of different portals, but we'll be using the Earthdata portal. NASA Earthdata provides a convenient web map interface to a wide range of NASA earth observations. The data are stored at one of several Distributed Active Archive Centers (DAACs). We will be accessing ICESat-2 data from the National Snow and Ice Data Center DAAC.","title":"Overview"},{"location":"preliminary/earthdata/#why-do-i-need-an-earthdata-login","text":"Each participant will need a login. We will be teaching you ways to programmatically access ICESat-2 data from within your Python scripts. You will need to enter your Earthdata username and password in order for this to work.","title":"Why do I need an Earthdata login?"},{"location":"preliminary/earthdata/#getting-an-earthdata-login","text":"If you do not already have an Earthdata login, then navigate to the Earthdata Login page: Enter a username and password, and then record this somewhere for use during the data access tutorial.","title":"Getting an Earthdata login"},{"location":"preliminary/github/","text":"GitHub Account What is Git/GitHub? Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. What if I do not have the git command on my local machine? If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation Why do I need a GitHub account? There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later! Why are we joining a GitHub Organization? GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have 'teams' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called ICESat-2 hackweek . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Alex Huynh via an email to icesat@uw.edu . We will then find your ID on GitHub and send you an invitation to our organization, which should generate an email notification to the email you provided when you signed up for GitHub. Follow the links in the email to accept the invitation. How should I configure my GitHub account? As you'll learn in the next lesson, we will use the ICESat-2 hackweek GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the ICESat-2hackweek organization. First, navigate to the \"People\" tab on the ICESat-2 hackweek GitHub organization and find yourself: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page. How will GitHub repositories be structured? When you click on the \"Repositories\" tab in the ICESat-2 hackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person.","title":"GitHub account"},{"location":"preliminary/github/#github-account","text":"","title":"GitHub Account"},{"location":"preliminary/github/#what-is-gitgithub","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment.","title":"What is Git/GitHub?"},{"location":"preliminary/github/#what-if-i-do-not-have-the-git-command-on-my-local-machine","text":"If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation","title":"What if I do not have the git command on my local machine?"},{"location":"preliminary/github/#why-do-i-need-a-github-account","text":"There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later!","title":"Why do I need a GitHub account?"},{"location":"preliminary/github/#why-are-we-joining-a-github-organization","text":"GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have 'teams' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called ICESat-2 hackweek . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Alex Huynh via an email to icesat@uw.edu . We will then find your ID on GitHub and send you an invitation to our organization, which should generate an email notification to the email you provided when you signed up for GitHub. Follow the links in the email to accept the invitation.","title":"Why are we joining a GitHub Organization?"},{"location":"preliminary/github/#how-should-i-configure-my-github-account","text":"As you'll learn in the next lesson, we will use the ICESat-2 hackweek GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the ICESat-2hackweek organization. First, navigate to the \"People\" tab on the ICESat-2 hackweek GitHub organization and find yourself: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page.","title":"How should I configure my GitHub account?"},{"location":"preliminary/github/#how-will-github-repositories-be-structured","text":"When you click on the \"Repositories\" tab in the ICESat-2 hackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person.","title":"How will GitHub repositories be structured?"},{"location":"preliminary/jupyterhub-fork%2Bclone/","text":"JupyterHub Connection Why are we using a shared cloud environment? Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. As you'll learn in the next lesson, there are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. We will encourage you to use our shared resources for all the tutorials, and you can optionally use this for your projects as well. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event (see our next lesson for details). How do I access the shared cloud environment? Access to our shared cloud environment is easy. Just click on http://icesat-2.hackweek.io/ . Assuming you set up your GitHub credentials correctly (see the previous lesson), you can now click on the \"Sign in with GitHub\" button. Then, authorize the OAuth app to connect to your GitHub account. You will be put back to a page that shows a single image choice for your server. Click \"Start\" to launch your JupyterLab server! It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab environment: What is Pangeo and how is this system configured? Pangeo is a community of researchers building open, reproducible and scalable scientific software tools. Several of us are involved in projects with NASA and NSF to build prototype systems to enable data discovery in the era of expanding data volume and complexity. For this hackweek, we have created virtual computing instances on Amazon Web Services that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server to each person in a group. These slides give a nice overview of what JupyterHub is all about. We use JupyterHub in an educational setting because it enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers. How do I get my code in and out of Pangeo? When you start your own instance of Pangeo you will have access to your own virtual drive space. No other Pangeo users will be able to see or access your data files. You can easily upload files to your virtual drive space and save files from Pangeo back to another location, such as GitHub or your own local laptop drive. Here we'll show you how to pull (copy) some files from GitHub into your virtual drive space using git. This will be a common task during the hackweek: at the start of each tutorial we'll ask you to \"fork\" (create your own copy of in your GitHub account) and \"clone\" (make a copy of in a computing environment, such as your local computer or Pangeo instance) the GitHub repository corresponding to the specific tutorial being taught into your Pangeo drive space. To clone (copy) a code repository from GitHub, we will need to interface with the file system of Pangeo. Pangeo is deployed in a Linux operating system and we will need to open a terminal within Pangeo to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: Now you can issue any Linux commands to manage your local file system. Now let's clone a repository (Note: we'll be teaching about Git clone during our introductory tutorials). This tutorial is built in a repository called \"preliminary\", so let's try cloning that. First, navigate in a browser on your own computer to the repository link here . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button: Now navigate back to your command line in JupyterLab. Type \"git clone\" and then paste in the url: A note about cutting and pasting Pasting something from your clipboard into the Pangeo terminal requires holding down the \"shift\" key and right-clicking. This is different from the usual Linux method that only requires a right click. After issuing the Git clone command you should see something like this: You may also upload files from your local system using the upload button (up-pointing arrow) on the top left of the JupyterHub navigation panel. Similarly, you may download files to your local system by right-clicking the file and selecting download (down-pointing arrow). Simple, example GitHub/git/local-workspace workflows for getting a tutorial started in your Pangeo instance and working on a group project are provided. The getting started on a tutorial workflow briefly reviews much of the information in this preliminary exercise along with steps for making and saving notes or other changes as you work through the tutorial and keeping it updated with the original, master copy. The basic git workflow for a project serves as a reminder of the git workflow for working on a group project while minimizing code conflicts that could result from multiple people making changes to the same files simultaneously. How do I end my Pangeo session? Will I lose all of my work? When you are finished working for the day it is important to explicitly log out of your Pangeo session. The reason for this is it will save us a bit of money! When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed. Stopping the server happens automatically when you log out, so navigate to \"File -> Log Out\" and just click \"Log Out\"! logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"JupyterHub Connection"},{"location":"preliminary/jupyterhub-fork%2Bclone/#jupyterhub-connection","text":"","title":"JupyterHub Connection"},{"location":"preliminary/jupyterhub-fork%2Bclone/#why-are-we-using-a-shared-cloud-environment","text":"Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. As you'll learn in the next lesson, there are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. We will encourage you to use our shared resources for all the tutorials, and you can optionally use this for your projects as well. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event (see our next lesson for details).","title":"Why are we using a shared cloud environment?"},{"location":"preliminary/jupyterhub-fork%2Bclone/#how-do-i-access-the-shared-cloud-environment","text":"Access to our shared cloud environment is easy. Just click on http://icesat-2.hackweek.io/ . Assuming you set up your GitHub credentials correctly (see the previous lesson), you can now click on the \"Sign in with GitHub\" button. Then, authorize the OAuth app to connect to your GitHub account. You will be put back to a page that shows a single image choice for your server. Click \"Start\" to launch your JupyterLab server! It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab environment:","title":"How do I access the shared cloud environment?"},{"location":"preliminary/jupyterhub-fork%2Bclone/#what-is-pangeo-and-how-is-this-system-configured","text":"Pangeo is a community of researchers building open, reproducible and scalable scientific software tools. Several of us are involved in projects with NASA and NSF to build prototype systems to enable data discovery in the era of expanding data volume and complexity. For this hackweek, we have created virtual computing instances on Amazon Web Services that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server to each person in a group. These slides give a nice overview of what JupyterHub is all about. We use JupyterHub in an educational setting because it enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers.","title":"What is Pangeo and how is this system configured?"},{"location":"preliminary/jupyterhub-fork%2Bclone/#how-do-i-get-my-code-in-and-out-of-pangeo","text":"When you start your own instance of Pangeo you will have access to your own virtual drive space. No other Pangeo users will be able to see or access your data files. You can easily upload files to your virtual drive space and save files from Pangeo back to another location, such as GitHub or your own local laptop drive. Here we'll show you how to pull (copy) some files from GitHub into your virtual drive space using git. This will be a common task during the hackweek: at the start of each tutorial we'll ask you to \"fork\" (create your own copy of in your GitHub account) and \"clone\" (make a copy of in a computing environment, such as your local computer or Pangeo instance) the GitHub repository corresponding to the specific tutorial being taught into your Pangeo drive space. To clone (copy) a code repository from GitHub, we will need to interface with the file system of Pangeo. Pangeo is deployed in a Linux operating system and we will need to open a terminal within Pangeo to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: Now you can issue any Linux commands to manage your local file system. Now let's clone a repository (Note: we'll be teaching about Git clone during our introductory tutorials). This tutorial is built in a repository called \"preliminary\", so let's try cloning that. First, navigate in a browser on your own computer to the repository link here . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button: Now navigate back to your command line in JupyterLab. Type \"git clone\" and then paste in the url: A note about cutting and pasting Pasting something from your clipboard into the Pangeo terminal requires holding down the \"shift\" key and right-clicking. This is different from the usual Linux method that only requires a right click. After issuing the Git clone command you should see something like this: You may also upload files from your local system using the upload button (up-pointing arrow) on the top left of the JupyterHub navigation panel. Similarly, you may download files to your local system by right-clicking the file and selecting download (down-pointing arrow). Simple, example GitHub/git/local-workspace workflows for getting a tutorial started in your Pangeo instance and working on a group project are provided. The getting started on a tutorial workflow briefly reviews much of the information in this preliminary exercise along with steps for making and saving notes or other changes as you work through the tutorial and keeping it updated with the original, master copy. The basic git workflow for a project serves as a reminder of the git workflow for working on a group project while minimizing code conflicts that could result from multiple people making changes to the same files simultaneously.","title":"How do I get my code in and out of Pangeo?"},{"location":"preliminary/jupyterhub-fork%2Bclone/#how-do-i-end-my-pangeo-session-will-i-lose-all-of-my-work","text":"When you are finished working for the day it is important to explicitly log out of your Pangeo session. The reason for this is it will save us a bit of money! When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed. Stopping the server happens automatically when you log out, so navigate to \"File -> Log Out\" and just click \"Log Out\"! logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"How do I end my Pangeo session? Will I lose all of my work?"},{"location":"preliminary/jupyterhub/","text":"JupyterHub Connection Why are we using a shared cloud environment? Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. As you'll learn in the next lesson, there are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. We will encourage you to use our shared resources for all the tutorials, and you can optionally use this for your projects as well. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event (see our next lesson for details). How do I access the shared cloud environment? Access to our shared cloud environment is easy. Just click on http://icesat-2.hackweek.io/ . Assuming you set up your GitHub credentials correctly (see the previous lesson), you can now click on the \"Sign in with GitHub\" button. Then, authorize the OAuth app to connect to your GitHub account. You will be put back to a page that shows a single image choice for your server. Click \"Start\" to launch your JupyterLab server! It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab environment: What is Pangeo and how is this system configured? Pangeo is a community of researchers building open, reproducible and scalable scientific software tools. Several of us are involved in projects with NASA and NSF to build prototype systems to enable data discovery in the era of expanding data volume and complexity. For this hackweek, we have created virtual computing instances on Amazon Web Services that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server to each person in a group. These slides give a nice overview of what JupyterHub is all about. We use JupyterHub in an educational setting because it enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers. How do I get my code in and out of Pangeo? When you start your own instance of Pangeo you will have access to your own virtual drive space. No other Pangeo users will be able to see or access your data files. You can easily upload files to your virtual drive space and save files from Pangeo back to another location, such as GitHub or your own local laptop drive. Here we'll show you how to pull (copy) some files from GitHub into your virtual drive space using git. This will be a common task during the hackweek: at the start of each tutorial we'll ask you to \"clone\" (make a copy of in a computing environment, such as your local computer or Pangeo instance) into your Pangeo drive space the GitHub repository corresponding to the specific tutorial being taught. To clone (copy) a code repository from GitHub, we will need to interface with the file system of Pangeo. Pangeo is deployed in a Linux operating system and we will need to open a terminal within Pangeo to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: Now you can issue any Linux commands to manage your local file system. Now let's clone a repository (Note: we'll be teaching about Git clone during our introductory tutorials). This tutorial is built in a repository called \"preliminary\", so let's try cloning that. First, navigate in a browser on your own computer to the repository link here . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button: Now navigate back to your command line in JupyterLab. Type \"git clone\" and then paste in the url: A note about cutting and pasting Pasting something from your clipboard into the Pangeo terminal requires holding down the \"shift\" key and right-clicking. This is different from the usual Linux method that only requires a right click. After issuing the Git clone command you should see something like this: You may also upload files from your local system using the upload button (up-pointing arrow) on the top left of the JupyterHub navigation panel. Similarly, you may download files to your local system by right-clicking the file and selecting download (down-pointing arrow). Simple, example GitHub/git/local-workspace workflows for getting a tutorial started in your Pangeo instance and working on a group project are provided. The getting started on a tutorial workflow briefly reviews much of the information in this preliminary exercise along with steps for keeping the tutorial updated with the original, master copy. The basic git workflow for a project serves as a reminder of the git workflow for working on a group project while minimizing code conflicts that could result from multiple people making changes to the same files simultaneously. How do I end my Pangeo session? Will I lose all of my work? When you are finished working for the day it is important to explicitly log out of your Pangeo session. The reason for this is it will save us a bit of money! When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed. Stopping the server happens automatically when you log out, so navigate to \"File -> Log Out\" and just click \"Log Out\"! logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"JupyterHub connection"},{"location":"preliminary/jupyterhub/#jupyterhub-connection","text":"","title":"JupyterHub Connection"},{"location":"preliminary/jupyterhub/#why-are-we-using-a-shared-cloud-environment","text":"Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. As you'll learn in the next lesson, there are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. We will encourage you to use our shared resources for all the tutorials, and you can optionally use this for your projects as well. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event (see our next lesson for details).","title":"Why are we using a shared cloud environment?"},{"location":"preliminary/jupyterhub/#how-do-i-access-the-shared-cloud-environment","text":"Access to our shared cloud environment is easy. Just click on http://icesat-2.hackweek.io/ . Assuming you set up your GitHub credentials correctly (see the previous lesson), you can now click on the \"Sign in with GitHub\" button. Then, authorize the OAuth app to connect to your GitHub account. You will be put back to a page that shows a single image choice for your server. Click \"Start\" to launch your JupyterLab server! It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab environment:","title":"How do I access the shared cloud environment?"},{"location":"preliminary/jupyterhub/#what-is-pangeo-and-how-is-this-system-configured","text":"Pangeo is a community of researchers building open, reproducible and scalable scientific software tools. Several of us are involved in projects with NASA and NSF to build prototype systems to enable data discovery in the era of expanding data volume and complexity. For this hackweek, we have created virtual computing instances on Amazon Web Services that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server to each person in a group. These slides give a nice overview of what JupyterHub is all about. We use JupyterHub in an educational setting because it enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers.","title":"What is Pangeo and how is this system configured?"},{"location":"preliminary/jupyterhub/#how-do-i-get-my-code-in-and-out-of-pangeo","text":"When you start your own instance of Pangeo you will have access to your own virtual drive space. No other Pangeo users will be able to see or access your data files. You can easily upload files to your virtual drive space and save files from Pangeo back to another location, such as GitHub or your own local laptop drive. Here we'll show you how to pull (copy) some files from GitHub into your virtual drive space using git. This will be a common task during the hackweek: at the start of each tutorial we'll ask you to \"clone\" (make a copy of in a computing environment, such as your local computer or Pangeo instance) into your Pangeo drive space the GitHub repository corresponding to the specific tutorial being taught. To clone (copy) a code repository from GitHub, we will need to interface with the file system of Pangeo. Pangeo is deployed in a Linux operating system and we will need to open a terminal within Pangeo to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: Now you can issue any Linux commands to manage your local file system. Now let's clone a repository (Note: we'll be teaching about Git clone during our introductory tutorials). This tutorial is built in a repository called \"preliminary\", so let's try cloning that. First, navigate in a browser on your own computer to the repository link here . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button: Now navigate back to your command line in JupyterLab. Type \"git clone\" and then paste in the url: A note about cutting and pasting Pasting something from your clipboard into the Pangeo terminal requires holding down the \"shift\" key and right-clicking. This is different from the usual Linux method that only requires a right click. After issuing the Git clone command you should see something like this: You may also upload files from your local system using the upload button (up-pointing arrow) on the top left of the JupyterHub navigation panel. Similarly, you may download files to your local system by right-clicking the file and selecting download (down-pointing arrow). Simple, example GitHub/git/local-workspace workflows for getting a tutorial started in your Pangeo instance and working on a group project are provided. The getting started on a tutorial workflow briefly reviews much of the information in this preliminary exercise along with steps for keeping the tutorial updated with the original, master copy. The basic git workflow for a project serves as a reminder of the git workflow for working on a group project while minimizing code conflicts that could result from multiple people making changes to the same files simultaneously.","title":"How do I get my code in and out of Pangeo?"},{"location":"preliminary/jupyterhub/#how-do-i-end-my-pangeo-session-will-i-lose-all-of-my-work","text":"When you are finished working for the day it is important to explicitly log out of your Pangeo session. The reason for this is it will save us a bit of money! When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed. Stopping the server happens automatically when you log out, so navigate to \"File -> Log Out\" and just click \"Log Out\"! logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"How do I end my Pangeo session? Will I lose all of my work?"},{"location":"projects/2019_projects/","text":"2019 ICESat-2 Cryospheric Hackweek Projects A brief list of the projects (and links to their repositories on GitHub) worked on at the 2019 Hackweek are below. These projects are also tagged with the 2019-project tag in the University of Washington ICESat-2 Hack Week GitHub organization . Crackup: Glaciersat2: Ground2float Segtrax: Snowblower: Topohack: Python Libraries icepyx : Originally icesat2py, the icepyx library initially began as a Hackweek project designed to bring together code accomplishing similar tasks (e.g. data access and read-in) Sea Ice Floes are Swell : Calculate chord length (CLD) and lead width (LWD) Segtrax : Create trajectories of sea ice motion (creates Python trajectory class). (video of presentation) Glaciers and Ice Sheets Crackup : Investigating small-scale features such as crevasses and water depth (video of presentation) . GlacierSat2 : Constrain surface types (e.g. wet vs. dry snow) using ICESat-2 data over the Juneau Icefield, working towards looking at seasonal elevation changes. (video of presentation) WaterNoice : Detection of hydrologic features (e.g. meltwater ponds, firn aquifer seeps, blue ice megadunes, icebergs, etc.) in ATL06 land ice product SnowBlower/blowing snow : Evaluate the blowing snow flag and look at blowing snow models. (video of presentation) Cross-trak (xtrak) : Interpolation between ICESat-2 tracks; create gridded elevation data from multiple ICESat-2 tracks Ground2Float : Identify grounding zones using ICESat-2 data (using the slope-break method). (video of presentation) Topohack : resolve topography over complex terrain. (video of presentation) Adapted from icepyx ICESat-2 Open-Source Resources Guide .","title":"2019 Hackweek Projects"},{"location":"projects/2019_projects/#2019-icesat-2-cryospheric-hackweek-projects","text":"A brief list of the projects (and links to their repositories on GitHub) worked on at the 2019 Hackweek are below. These projects are also tagged with the 2019-project tag in the University of Washington ICESat-2 Hack Week GitHub organization . Crackup: Glaciersat2: Ground2float Segtrax: Snowblower: Topohack: Python Libraries icepyx : Originally icesat2py, the icepyx library initially began as a Hackweek project designed to bring together code accomplishing similar tasks (e.g. data access and read-in) Sea Ice Floes are Swell : Calculate chord length (CLD) and lead width (LWD) Segtrax : Create trajectories of sea ice motion (creates Python trajectory class). (video of presentation) Glaciers and Ice Sheets Crackup : Investigating small-scale features such as crevasses and water depth (video of presentation) . GlacierSat2 : Constrain surface types (e.g. wet vs. dry snow) using ICESat-2 data over the Juneau Icefield, working towards looking at seasonal elevation changes. (video of presentation) WaterNoice : Detection of hydrologic features (e.g. meltwater ponds, firn aquifer seeps, blue ice megadunes, icebergs, etc.) in ATL06 land ice product SnowBlower/blowing snow : Evaluate the blowing snow flag and look at blowing snow models. (video of presentation) Cross-trak (xtrak) : Interpolation between ICESat-2 tracks; create gridded elevation data from multiple ICESat-2 tracks Ground2Float : Identify grounding zones using ICESat-2 data (using the slope-break method). (video of presentation) Topohack : resolve topography over complex terrain. (video of presentation) Adapted from icepyx ICESat-2 Open-Source Resources Guide .","title":"2019 ICESat-2 Cryospheric Hackweek Projects"},{"location":"projects/example_workflow/","text":"Basic git workflow for a project Here we suggest a basic git workflow for working on your group project. Combined with our example project template and good communication, this workflow should help minimize conflicts on your GitHub project repo. First time only - clone your project into your local working environment $ git clone https://github.com/ICESAT-2HackWeek/<project-repo-name>.git Where the <project-repo-name> is the unique name of your project repository. Each time you begin working Navigate to your project directory: $ cd <project-repo-name> Now, check in with your team: has there been any new work pushed to GitHub? If so, you will need to pull remote changes to your master branch: $ git fetch $ git pull origin master:master Next, checkout your working branch. Use the -b option if you are beginning work and need to create a new branch: $ git checkout [-b] <branch-name> Here <branch-name> is an arbitrary name identifying this branch of work. Make changes or add new files locally and put them on GitHub $ git add new_file #if adding a new file $ git status #to see which files have been added or modified and are ready (staged) for committing $ git commit -am \"brief description of your changes (commit message)\" $ git push origin branch_name Complete pull request and merge with master via GitHub UI. Clean up your local repository (after successful merge of pull request) Switch back to the master branch. $ git checkout master Confirm that you are on the master branch. $ git branch Delete the branch containing the changes you just merged. This will delete it on GitHub (remote, if you did not click the \"delete branch\" button after merging). $ git push origin --delete branch_name You need to also delete the local version of your branch. $ git branch -d branch_name Finally, git pull all the latest changes (yours and others) to your local master branch. $ git pull When you are ready to do more work, checkout another branch and repeat. Project Data - download, storage, and access Transferring and storing large amounts of data is expensive. Rather than each project team member downloading their own copy of the data, we encourage teams to have one member download the data to a shared project directory (and make sure the code to get the data is shared on the group's project repo) that everyone can access from the Hackweek's Pangeo JupyterHub. The file system can be accessed in the same manner as any other drive with a directory/file structure. The name of the file system is /srv/shared/projects/ , and you should create a directory for your team's data (which may then also have subdirectories). Adapted from https://github.com/ICESAT-2HackWeek/topohack/wiki/Git-workflow-for-team","title":"Project Example Github Workflow and Data Sharing"},{"location":"projects/example_workflow/#basic-git-workflow-for-a-project","text":"Here we suggest a basic git workflow for working on your group project. Combined with our example project template and good communication, this workflow should help minimize conflicts on your GitHub project repo.","title":"Basic git workflow for a project"},{"location":"projects/example_workflow/#first-time-only-clone-your-project-into-your-local-working-environment","text":"$ git clone https://github.com/ICESAT-2HackWeek/<project-repo-name>.git Where the <project-repo-name> is the unique name of your project repository.","title":"First time only - clone your project into your local working environment"},{"location":"projects/example_workflow/#each-time-you-begin-working","text":"Navigate to your project directory: $ cd <project-repo-name> Now, check in with your team: has there been any new work pushed to GitHub? If so, you will need to pull remote changes to your master branch: $ git fetch $ git pull origin master:master Next, checkout your working branch. Use the -b option if you are beginning work and need to create a new branch: $ git checkout [-b] <branch-name> Here <branch-name> is an arbitrary name identifying this branch of work.","title":"Each time you begin working"},{"location":"projects/example_workflow/#make-changes-or-add-new-files-locally-and-put-them-on-github","text":"$ git add new_file #if adding a new file $ git status #to see which files have been added or modified and are ready (staged) for committing $ git commit -am \"brief description of your changes (commit message)\" $ git push origin branch_name Complete pull request and merge with master via GitHub UI.","title":"Make changes or add new files locally and put them on GitHub"},{"location":"projects/example_workflow/#clean-up-your-local-repository-after-successful-merge-of-pull-request","text":"Switch back to the master branch. $ git checkout master Confirm that you are on the master branch. $ git branch Delete the branch containing the changes you just merged. This will delete it on GitHub (remote, if you did not click the \"delete branch\" button after merging). $ git push origin --delete branch_name You need to also delete the local version of your branch. $ git branch -d branch_name Finally, git pull all the latest changes (yours and others) to your local master branch. $ git pull When you are ready to do more work, checkout another branch and repeat.","title":"Clean up your local repository (after successful merge of pull request)"},{"location":"projects/example_workflow/#project-data-download-storage-and-access","text":"Transferring and storing large amounts of data is expensive. Rather than each project team member downloading their own copy of the data, we encourage teams to have one member download the data to a shared project directory (and make sure the code to get the data is shared on the group's project repo) that everyone can access from the Hackweek's Pangeo JupyterHub. The file system can be accessed in the same manner as any other drive with a directory/file structure. The name of the file system is /srv/shared/projects/ , and you should create a directory for your team's data (which may then also have subdirectories). Adapted from https://github.com/ICESAT-2HackWeek/topohack/wiki/Git-workflow-for-team","title":"Project Data - download, storage, and access"},{"location":"projects/overview/","text":"Overview This section contains everything you need to know about hackweek projects: What are the roles and responsibilities of hackweek project participants? How to initialize a project within the hackweek Github Organization? What are the recommended GitHub workflows for managing projects? What are some examples of past projects ? Purpose of the projects: During the hackweek we will be facilitating open hacking sessions most of the afternoons. The purpose of these sessions is for you to gain hands-on experience in working together on a well-defined problem. What is hacking? Hacking is a session of focused, highly collaborative computer programming, in which we create conditions for rapid absorption of new ideas and methods. The word \"hack\" or \"hackathon\" has many different interpretations, both positive and negative. Here our intention is to foster the idea of hacking as a fun, interactive and welcoming environment to explore and experiment with computer code. Why is this important? Increasingly, research and software development is being conducted across groups of people with diverse skills and backgrounds. We believe this collaborative work leads to more innovative solutions to complex problems. At CSI-2020 Hackweek, our goal is to explore with you some of the skills needed to navigate technical and social challenges of working in these kinds of collaborative settings. How will the projects be conducted? Participants have already posted initial ideas for projects in the #project_ideas channel. On Friday, June 12 we will begin the formation of preliminary teams of (3-7 people) around project ideas. We will finalize the teams and project roles during our session on Monday, June 15th. Group \"Hacking\" begins immediately afterwards. each team will identify: a project lead, likely the person who pitched the idea, who has knowledge of the datasets and the specific problem to be explored. But roles can be assigned as the group decides to best fit skills and needs. a data science lead from the pool of CSI-2020 instructors who has expertise in the data tools and methods once formed, each team will be guided through exercises to help narrow in on a set of tasks that are doable within the 5 days. A brief project outline will be posted to GitHub, following the \"Project Guidelines\" below. On the mornings of June 16th, and 17th we will have a daily stand-up meeting to check-in on progress and challenges On Thursday June 18th each team will present their work in a series of lightning talks. What can I do to prepare in advance? if you have a project idea already brewing, we encourage you to share that with participants on our #project_ideas channel. feel free to explore various projects and initiate conversations. The goal is to gather as much information as you can to inform your decision about which team to join when we meet in person. contact a CSI-2020 organizer if you would like assistance in assessing whether a project is well-scoped, or if you need help with a particular dataset. Project guidelines Each project requires a brief project summary in the readme.md of each GitHub project folder. Below is a template for the project summary. You can visit the project folder on GitHub to see existing examples. Project Title Brief title describing the proposed work. Collaborators on this project List all participants on the project. Choose one team member to act as project lead, and identify one waterhack organizer as the data science lead. The problem What problem are you going to explore? Provide a few sentences. If this is a technical exploration of software or data science methods, explain why this work is important in a broader context. Application Example List one specific application of this work. Sample data If you already have some data to explore, briefly describe it here (size, format, how to access). Specific Questions List the specific tasks you want to accomplish or research questions you want to answer. Existing methods How would you or others traditionally try to address this problem? Proposed methods/tools Building from what you learn at this hackweek, what new approaches would you like to try to implement? Background reading Optional: links to manuscripts or technical documents for more in-depth analysis.","title":"Overview"},{"location":"projects/overview/#overview","text":"This section contains everything you need to know about hackweek projects: What are the roles and responsibilities of hackweek project participants? How to initialize a project within the hackweek Github Organization? What are the recommended GitHub workflows for managing projects? What are some examples of past projects ?","title":"Overview"},{"location":"projects/overview/#purpose-of-the-projects","text":"During the hackweek we will be facilitating open hacking sessions most of the afternoons. The purpose of these sessions is for you to gain hands-on experience in working together on a well-defined problem.","title":"Purpose of the projects:"},{"location":"projects/overview/#what-is-hacking","text":"Hacking is a session of focused, highly collaborative computer programming, in which we create conditions for rapid absorption of new ideas and methods. The word \"hack\" or \"hackathon\" has many different interpretations, both positive and negative. Here our intention is to foster the idea of hacking as a fun, interactive and welcoming environment to explore and experiment with computer code.","title":"What is hacking?"},{"location":"projects/overview/#why-is-this-important","text":"Increasingly, research and software development is being conducted across groups of people with diverse skills and backgrounds. We believe this collaborative work leads to more innovative solutions to complex problems. At CSI-2020 Hackweek, our goal is to explore with you some of the skills needed to navigate technical and social challenges of working in these kinds of collaborative settings.","title":"Why is this important?"},{"location":"projects/overview/#how-will-the-projects-be-conducted","text":"Participants have already posted initial ideas for projects in the #project_ideas channel. On Friday, June 12 we will begin the formation of preliminary teams of (3-7 people) around project ideas. We will finalize the teams and project roles during our session on Monday, June 15th. Group \"Hacking\" begins immediately afterwards. each team will identify: a project lead, likely the person who pitched the idea, who has knowledge of the datasets and the specific problem to be explored. But roles can be assigned as the group decides to best fit skills and needs. a data science lead from the pool of CSI-2020 instructors who has expertise in the data tools and methods once formed, each team will be guided through exercises to help narrow in on a set of tasks that are doable within the 5 days. A brief project outline will be posted to GitHub, following the \"Project Guidelines\" below. On the mornings of June 16th, and 17th we will have a daily stand-up meeting to check-in on progress and challenges On Thursday June 18th each team will present their work in a series of lightning talks.","title":"How will the projects be conducted?"},{"location":"projects/overview/#what-can-i-do-to-prepare-in-advance","text":"if you have a project idea already brewing, we encourage you to share that with participants on our #project_ideas channel. feel free to explore various projects and initiate conversations. The goal is to gather as much information as you can to inform your decision about which team to join when we meet in person. contact a CSI-2020 organizer if you would like assistance in assessing whether a project is well-scoped, or if you need help with a particular dataset.","title":"What can I do to prepare in advance?"},{"location":"projects/overview/#project-guidelines","text":"Each project requires a brief project summary in the readme.md of each GitHub project folder. Below is a template for the project summary. You can visit the project folder on GitHub to see existing examples.","title":"Project guidelines"},{"location":"projects/overview/#project-title","text":"Brief title describing the proposed work.","title":"Project Title"},{"location":"projects/overview/#collaborators-on-this-project","text":"List all participants on the project. Choose one team member to act as project lead, and identify one waterhack organizer as the data science lead.","title":"Collaborators on this project"},{"location":"projects/overview/#the-problem","text":"What problem are you going to explore? Provide a few sentences. If this is a technical exploration of software or data science methods, explain why this work is important in a broader context.","title":"The problem"},{"location":"projects/overview/#application-example","text":"List one specific application of this work.","title":"Application Example"},{"location":"projects/overview/#sample-data","text":"If you already have some data to explore, briefly describe it here (size, format, how to access).","title":"Sample data"},{"location":"projects/overview/#specific-questions","text":"List the specific tasks you want to accomplish or research questions you want to answer.","title":"Specific Questions"},{"location":"projects/overview/#existing-methods","text":"How would you or others traditionally try to address this problem?","title":"Existing methods"},{"location":"projects/overview/#proposed-methodstools","text":"Building from what you learn at this hackweek, what new approaches would you like to try to implement?","title":"Proposed methods/tools"},{"location":"projects/overview/#background-reading","text":"Optional: links to manuscripts or technical documents for more in-depth analysis.","title":"Background reading"},{"location":"projects/project_initialization/","text":"Project Initialization The project lead(s) should do the following: Decide on a short, memorable project name (discuss with your team) Create a new Slack channel for discussion: Click \u201c+\u201d icon next to Channels list in Slack sidebar -> \u201cCreate a channel\u201d Use short project name Invite your team members Slack members Create a new Github repo within the ICESat-2 Organization: Go to: https://github.com/ICESAT-2HackWeek Click the green \u201cNew\u201d button on right side of page Select the \"ICESAT-2HackWeek/sample_project_repository\" template Use short project name Public is ideal (so other participants can follow progress). Can also select Private for now and make Public before final presentation. Create a new Github team within the ICESat-2 Organization: Go to: https://github.com/orgs/ICESAT-2HackWeek/teams (or click the \u201cTeams\u201d tab near the top of the Org page) Click green \u201cNew team\u201d button Use short project name for \u201cTeam name\u201d Add all team members - Click \u201cMembers\u201d tab and green \u201cAdd a member\u201d button Add the project team to your project repo: Go to project repo page Click \u201cSettings\u201d tab in upper right corner Select \u201cManage access\u201d on left side of page Add the team name under the Manage access section Select \u201cwrite\u201d to enable all team members to make commits","title":"Project Initialization"},{"location":"projects/project_initialization/#project-initialization","text":"The project lead(s) should do the following:","title":"Project Initialization"},{"location":"projects/project_initialization/#decide-on-a-short-memorable-project-name-discuss-with-your-team","text":"","title":"Decide on a short, memorable project name (discuss with your team)"},{"location":"projects/project_initialization/#create-a-new-slack-channel-for-discussion","text":"Click \u201c+\u201d icon next to Channels list in Slack sidebar -> \u201cCreate a channel\u201d Use short project name Invite your team members Slack members","title":"Create a new Slack channel for discussion:"},{"location":"projects/project_initialization/#create-a-new-github-repo-within-the-icesat-2-organization","text":"Go to: https://github.com/ICESAT-2HackWeek Click the green \u201cNew\u201d button on right side of page Select the \"ICESAT-2HackWeek/sample_project_repository\" template Use short project name Public is ideal (so other participants can follow progress). Can also select Private for now and make Public before final presentation.","title":"Create a new Github repo within the ICESat-2 Organization:"},{"location":"projects/project_initialization/#create-a-new-github-team-within-the-icesat-2-organization","text":"Go to: https://github.com/orgs/ICESAT-2HackWeek/teams (or click the \u201cTeams\u201d tab near the top of the Org page) Click green \u201cNew team\u201d button Use short project name for \u201cTeam name\u201d Add all team members - Click \u201cMembers\u201d tab and green \u201cAdd a member\u201d button","title":"Create a new Github team within the ICESat-2 Organization:"},{"location":"projects/project_initialization/#add-the-project-team-to-your-project-repo","text":"Go to project repo page Click \u201cSettings\u201d tab in upper right corner Select \u201cManage access\u201d on left side of page Add the team name under the Manage access section Select \u201cwrite\u201d to enable all team members to make commits","title":"Add the project team to your project repo:"},{"location":"projects/project_roles/","text":"Project Roles and Responsibilities Project Lead The project scientist will lead a hackweek project . In this role, the project scientist will: pitch project and interact with all interested participants during networking. coordinate team building with other instructors to an optimal size of 4-7 total participants per team. with help from the moderator, populate the GitHub project repository and README following the Project Guidelines . coordinate with the tutor/moderator to support the team, especially for the development of Github workflows that work for everyone to be able to contribute code. oversee data management; be sure you have permission and consent to use data you share in the project and follow professional standards while using data for training that may be used in future publications. Here is a good resource on publication of data and consent ethics. facilitate team work. coordinate team activities and code to answer the research question; data, code, and tools originally proposed may change. make sure that everyone participates in the project. support each individual on your team to meeting their individual goals. Tutor / Moderator The role of tutor / moderator includes: advising teams regarding data science practices and methodologies help coordinate a Github workflow enable and encourage participants to solve their problems in a way that builds confidence in their skills","title":"Project Roles and Responsibilities"},{"location":"projects/project_roles/#project-roles-and-responsibilities","text":"","title":"Project Roles and Responsibilities"},{"location":"projects/project_roles/#project-lead","text":"The project scientist will lead a hackweek project . In this role, the project scientist will: pitch project and interact with all interested participants during networking. coordinate team building with other instructors to an optimal size of 4-7 total participants per team. with help from the moderator, populate the GitHub project repository and README following the Project Guidelines . coordinate with the tutor/moderator to support the team, especially for the development of Github workflows that work for everyone to be able to contribute code. oversee data management; be sure you have permission and consent to use data you share in the project and follow professional standards while using data for training that may be used in future publications. Here is a good resource on publication of data and consent ethics. facilitate team work. coordinate team activities and code to answer the research question; data, code, and tools originally proposed may change. make sure that everyone participates in the project. support each individual on your team to meeting their individual goals.","title":"Project Lead"},{"location":"projects/project_roles/#tutor-moderator","text":"The role of tutor / moderator includes: advising teams regarding data science practices and methodologies help coordinate a Github workflow enable and encourage participants to solve their problems in a way that builds confidence in their skills","title":"Tutor / Moderator"},{"location":"reference/VocabAcronyms/","text":"Vocabulary This page explains some of the terms encountered during tutorials and links to resources on where to learn more about them. This page is under development and we will be continually adding content. Platforms JupyterHub : a way to serve Jupyter notebooks for multiple users. Software Libraries Numpy: NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays. Matplotlib: Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy. It provides an object-oriented API for embedding plots into applications. Pandas: Pandas is a software library written for the Python programming language for data manipulation and analysis. In particular, it offers data structures and operations for manipulating numerical tables and time series. Anaconda: Anaconda is a free and open-source distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment. Tools and Methods Jupyter Notebooks: The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more Docker: An image is a executable package that includes everything needed to run a piece of software, including the code, a runtime, libraries, environment variables, and configuration files. A container is a runtime instance of an image \u2013 what the image becomes in memory when actually executed. It runs completely isolated from the host environment by default, only accessing host files and ports if configured to do so. Acronyms","title":"Vocabulary and Acronyms"},{"location":"reference/VocabAcronyms/#vocabulary","text":"This page explains some of the terms encountered during tutorials and links to resources on where to learn more about them. This page is under development and we will be continually adding content.","title":"Vocabulary"},{"location":"reference/VocabAcronyms/#platforms","text":"JupyterHub : a way to serve Jupyter notebooks for multiple users.","title":"Platforms"},{"location":"reference/VocabAcronyms/#software-libraries","text":"Numpy: NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays. Matplotlib: Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy. It provides an object-oriented API for embedding plots into applications. Pandas: Pandas is a software library written for the Python programming language for data manipulation and analysis. In particular, it offers data structures and operations for manipulating numerical tables and time series. Anaconda: Anaconda is a free and open-source distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment.","title":"Software Libraries"},{"location":"reference/VocabAcronyms/#tools-and-methods","text":"Jupyter Notebooks: The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more Docker: An image is a executable package that includes everything needed to run a piece of software, including the code, a runtime, libraries, environment variables, and configuration files. A container is a runtime instance of an image \u2013 what the image becomes in memory when actually executed. It runs completely isolated from the host environment by default, only accessing host files and ports if configured to do so.","title":"Tools and Methods"},{"location":"reference/VocabAcronyms/#acronyms","text":"","title":"Acronyms"},{"location":"reference/conda-env/","text":"Custom Environments in JupyterHub","title":"Custom Environments in JupyterHub"},{"location":"reference/conda-env/#custom-environments-in-jupyterhub","text":"","title":"Custom Environments in JupyterHub"},{"location":"tutorials/getting_started/","text":"Getting started on a tutorial These are instructions for getting a tutorial started on Pangeo (in your browser) and updating the tutorial. If you would like to take notes, please do so in an external document or your personal fork of the tutorial repository (if you know what that means). Start Pangeo in your browser Step 1 Navigate to the Pangeo JupyterHub for ICESat-2 Hackweek 2020 . Step 2 Sign in using your GitHub account, if you are not already signed in. (First time only: Grant the ICESat-2 Hackweek Organization permissions - this grants you access to the Pangeo computing environment for the Hackweek.) Step 3 Start the Pangeo computing environement. It may take a few moments to start up. Get a local copy of the tutorial and follow along This basic workflow allows you to follow along with tutorials while staying up-to-date with any changes made to the master tutorial. Step 1 Navigate to the tutorial repository on GitHub . Clone the tutorial to your machine/Pangeo environment. You can easily copy the link to a repository by selecting the green \"clone or download\" dropdown and hitting the clipboard icon, which will automatically copy the link for you. Open a terminal (using the \"plus\" sign in your Pangeo JupyterHub) and execute: $ git clone https://github.com/ICESAT-2HackWeek/geospatial-analysis.git $ cd geospatial-analysis Note: a more detailed version of step 1, including images, is available as part of the Preliminary Steps - JupyterHub Connection . Step 2 Add the origin master (a link to the tutorial repository you cloned) so we can stay up to date with any changes made to the main tutorial. $ git remote add origin https://github.com/ICESAT-2HackWeek/geospatial-analysis.git Step 3 Update your local copy with any changes to the master copy. If you have tried to save notes or changes within your local copy of the notebook, this may cause conflicts. Fetch and merge (using git pull) the latest changes from origin master. $ git pull origin Step 4 Follow along with the tutorial. You can save your notes (if you're taking some in the Pangeo text editor) by downloading a copy to your local machine. If additional changes were made to the origin master tutorial, you can checkout the master branch $ git checkout master and repeat step 3 to get the latest content. Please note: the Pangeo JupyterHub you are using for this Hackweek should not be relied upon to save your documents beyond the duration of the Hackweek, and will be removed a few weeks after the Hackweek. Thus, for any non-repository changes or repository changes that have not been pushed to GitHub, you MUST complete Step 4 to save the files to your local machine if you would like continued access to them. Adapted from https://github.com/ICESAT-2HackWeek/topohack/wiki/Git-workflow-for-tutorials Originally from https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97","title":"Getting Started"},{"location":"tutorials/getting_started/#getting-started-on-a-tutorial","text":"These are instructions for getting a tutorial started on Pangeo (in your browser) and updating the tutorial. If you would like to take notes, please do so in an external document or your personal fork of the tutorial repository (if you know what that means).","title":"Getting started on a tutorial"},{"location":"tutorials/getting_started/#start-pangeo-in-your-browser","text":"","title":"Start Pangeo in your browser"},{"location":"tutorials/getting_started/#step-1","text":"Navigate to the Pangeo JupyterHub for ICESat-2 Hackweek 2020 .","title":"Step 1"},{"location":"tutorials/getting_started/#step-2","text":"Sign in using your GitHub account, if you are not already signed in. (First time only: Grant the ICESat-2 Hackweek Organization permissions - this grants you access to the Pangeo computing environment for the Hackweek.)","title":"Step 2"},{"location":"tutorials/getting_started/#step-3","text":"Start the Pangeo computing environement. It may take a few moments to start up.","title":"Step 3"},{"location":"tutorials/getting_started/#get-a-local-copy-of-the-tutorial-and-follow-along","text":"This basic workflow allows you to follow along with tutorials while staying up-to-date with any changes made to the master tutorial.","title":"Get a local copy of the tutorial and follow along"},{"location":"tutorials/getting_started/#step-1_1","text":"Navigate to the tutorial repository on GitHub . Clone the tutorial to your machine/Pangeo environment. You can easily copy the link to a repository by selecting the green \"clone or download\" dropdown and hitting the clipboard icon, which will automatically copy the link for you. Open a terminal (using the \"plus\" sign in your Pangeo JupyterHub) and execute: $ git clone https://github.com/ICESAT-2HackWeek/geospatial-analysis.git $ cd geospatial-analysis Note: a more detailed version of step 1, including images, is available as part of the Preliminary Steps - JupyterHub Connection .","title":"Step 1"},{"location":"tutorials/getting_started/#step-2_1","text":"Add the origin master (a link to the tutorial repository you cloned) so we can stay up to date with any changes made to the main tutorial. $ git remote add origin https://github.com/ICESAT-2HackWeek/geospatial-analysis.git","title":"Step 2"},{"location":"tutorials/getting_started/#step-3_1","text":"Update your local copy with any changes to the master copy. If you have tried to save notes or changes within your local copy of the notebook, this may cause conflicts. Fetch and merge (using git pull) the latest changes from origin master. $ git pull origin","title":"Step 3"},{"location":"tutorials/getting_started/#step-4","text":"Follow along with the tutorial. You can save your notes (if you're taking some in the Pangeo text editor) by downloading a copy to your local machine. If additional changes were made to the origin master tutorial, you can checkout the master branch $ git checkout master and repeat step 3 to get the latest content. Please note: the Pangeo JupyterHub you are using for this Hackweek should not be relied upon to save your documents beyond the duration of the Hackweek, and will be removed a few weeks after the Hackweek. Thus, for any non-repository changes or repository changes that have not been pushed to GitHub, you MUST complete Step 4 to save the files to your local machine if you would like continued access to them. Adapted from https://github.com/ICESAT-2HackWeek/topohack/wiki/Git-workflow-for-tutorials Originally from https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97","title":"Step 4"},{"location":"tutorials/getting_started_fork%2Bclone/","text":"Getting started on a tutorial These are instructions for getting a tutorial started on Pangeo (in your browser) and saving changes to your copy of a tutorial. Start Pangeo in your browser Step 1 Navigate to the Pangeo JupyterHub for ICESat-2 Hackweek 2020 . Step 2 Sign in using your GitHub account, if you are not already signed in. (First time only: Grant the ICESat-2 Hackweek Organization permissions - this grants you access to the Pangeo computing environment for the Hackweek.) Step 3 Start the Pangeo computing environement. It may take a few moments to start up. Get a local copy of the tutorial and follow along This basic workflow allows you to follow along with tutorials and save changes to your fork while staying up-to-date with any changes made to the master tutorial. Step 1 Navigate to the tutorial repository on GitHub . Fork the tutorial repository to your personal GitHub account via the GitHub web user interface. For example, https://github.com/friedrichknuth/geospatial-analysis forked from https://github.com/ICESAT-2HackWeek/geospatial-analysis. Step 2 Clone the forked tutorial to your machine/Pangeo environment. You can easily copy the link to a repository by selecting the green \"clone or download\" dropdown and hitting the clipboard icon, which will automatically copy the link for you. Open a terminal (using the \"plus\" sign in your Pangeo JupyterHub) and execute: $ git clone https://github.com/friedrichknuth/geospatial-analysis.git $ cd geospatial-analysis Note: a more detailed version of step 2, including images, is available as part of the Preliminary Steps - JupyterHub Connection . Step 3 Add the upstream master (a link to the tutorial repository you forked) so we can stay up to date with any changes made to the main tutorial. $ git remote add upstream https://github.com/ICESAT-2HackWeek/geospatial-analysis.git Step 4 Fetch and merge the latest changes from upstream master. $ git fetch upstream $ git merge upstream/master Step 5 Checkout a branch to make changes and follow along with the tutorial. $ git checkout -b branch_name Step 6 Follow along with the tutorial. You are welcome to make changes and notes as you go, and these will be saved to your forked copy in the next step. Step 7 Commit your changes and push them up to your fork, under your branch. $ git commit -am \"A short commit message noting what you have changed here\" $ git push origin branch_name Now your fork will have your changes backed up to GitHub under your branch. If additional changes were made to the upstream master tutorial, you can checkout the master branch $ git checkout master and repeat step 4 to get the latest content, then checkout a new branch with a different name and follow along from there. Please note: the Pangeo JupyterHub you are using for this Hackweek should not be relied upon to save your changes, and will be removed a few weeks after the Hackweek. Thus, you MUST complete Step 7 to push the changes to your GitHub fork of the tutorial if you would like to have continued access to any tutorial notes or changes you made. Adapted from https://github.com/ICESAT-2HackWeek/topohack/wiki/Git-workflow-for-tutorials Originally from https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97","title":"Getting started on a tutorial"},{"location":"tutorials/getting_started_fork%2Bclone/#getting-started-on-a-tutorial","text":"These are instructions for getting a tutorial started on Pangeo (in your browser) and saving changes to your copy of a tutorial.","title":"Getting started on a tutorial"},{"location":"tutorials/getting_started_fork%2Bclone/#start-pangeo-in-your-browser","text":"","title":"Start Pangeo in your browser"},{"location":"tutorials/getting_started_fork%2Bclone/#step-1","text":"Navigate to the Pangeo JupyterHub for ICESat-2 Hackweek 2020 .","title":"Step 1"},{"location":"tutorials/getting_started_fork%2Bclone/#step-2","text":"Sign in using your GitHub account, if you are not already signed in. (First time only: Grant the ICESat-2 Hackweek Organization permissions - this grants you access to the Pangeo computing environment for the Hackweek.)","title":"Step 2"},{"location":"tutorials/getting_started_fork%2Bclone/#step-3","text":"Start the Pangeo computing environement. It may take a few moments to start up.","title":"Step 3"},{"location":"tutorials/getting_started_fork%2Bclone/#get-a-local-copy-of-the-tutorial-and-follow-along","text":"This basic workflow allows you to follow along with tutorials and save changes to your fork while staying up-to-date with any changes made to the master tutorial.","title":"Get a local copy of the tutorial and follow along"},{"location":"tutorials/getting_started_fork%2Bclone/#step-1_1","text":"Navigate to the tutorial repository on GitHub . Fork the tutorial repository to your personal GitHub account via the GitHub web user interface. For example, https://github.com/friedrichknuth/geospatial-analysis forked from https://github.com/ICESAT-2HackWeek/geospatial-analysis.","title":"Step 1"},{"location":"tutorials/getting_started_fork%2Bclone/#step-2_1","text":"Clone the forked tutorial to your machine/Pangeo environment. You can easily copy the link to a repository by selecting the green \"clone or download\" dropdown and hitting the clipboard icon, which will automatically copy the link for you. Open a terminal (using the \"plus\" sign in your Pangeo JupyterHub) and execute: $ git clone https://github.com/friedrichknuth/geospatial-analysis.git $ cd geospatial-analysis Note: a more detailed version of step 2, including images, is available as part of the Preliminary Steps - JupyterHub Connection .","title":"Step 2"},{"location":"tutorials/getting_started_fork%2Bclone/#step-3_1","text":"Add the upstream master (a link to the tutorial repository you forked) so we can stay up to date with any changes made to the main tutorial. $ git remote add upstream https://github.com/ICESAT-2HackWeek/geospatial-analysis.git","title":"Step 3"},{"location":"tutorials/getting_started_fork%2Bclone/#step-4","text":"Fetch and merge the latest changes from upstream master. $ git fetch upstream $ git merge upstream/master","title":"Step 4"},{"location":"tutorials/getting_started_fork%2Bclone/#step-5","text":"Checkout a branch to make changes and follow along with the tutorial. $ git checkout -b branch_name","title":"Step 5"},{"location":"tutorials/getting_started_fork%2Bclone/#step-6","text":"Follow along with the tutorial. You are welcome to make changes and notes as you go, and these will be saved to your forked copy in the next step.","title":"Step 6"},{"location":"tutorials/getting_started_fork%2Bclone/#step-7","text":"Commit your changes and push them up to your fork, under your branch. $ git commit -am \"A short commit message noting what you have changed here\" $ git push origin branch_name Now your fork will have your changes backed up to GitHub under your branch. If additional changes were made to the upstream master tutorial, you can checkout the master branch $ git checkout master and repeat step 4 to get the latest content, then checkout a new branch with a different name and follow along from there. Please note: the Pangeo JupyterHub you are using for this Hackweek should not be relied upon to save your changes, and will be removed a few weeks after the Hackweek. Thus, you MUST complete Step 7 to push the changes to your GitHub fork of the tutorial if you would like to have continued access to any tutorial notes or changes you made. Adapted from https://github.com/ICESAT-2HackWeek/topohack/wiki/Git-workflow-for-tutorials Originally from https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97","title":"Step 7"},{"location":"tutorials/github/","text":"GitHub This tutorial is in development and this page is being continually updated. You may visit our 2019 Git/GitHub tutorials for details on what will be taught. Learning Objectives Understanding the fundamentals of Git GitHub vs. Git: basic overview of how to operate within GitHub websites vs. local operations with Git via command line Single-user workflows Example to illustrate the above: syncing your own work from laptop/work desktop/HPC Collaborative workflows Dealing with common Git problems General best practices Schedule Time Section Summary 15 min Getting started Review of the command line, filesystem navigation and JupyterLab environment 15 min Git fundamentals Basic concepts of commits and repositories, working with init/diff/add and commit. 20 min Group Activity In small groups, everyone experiements with adding and committing to a test repository, learning about merge conflicts. 20 min GitHub in the Hackweek Demonstrate specific Git workflows relevant to the upcoming hackweek tutorials and projects 10 min Summary Overview of what comes next and discussion of common challenges and frustrations if this is new!","title":"Introduction to GitHub"},{"location":"tutorials/github/#github","text":"This tutorial is in development and this page is being continually updated. You may visit our 2019 Git/GitHub tutorials for details on what will be taught.","title":"GitHub"},{"location":"tutorials/github/#learning-objectives","text":"Understanding the fundamentals of Git GitHub vs. Git: basic overview of how to operate within GitHub websites vs. local operations with Git via command line Single-user workflows Example to illustrate the above: syncing your own work from laptop/work desktop/HPC Collaborative workflows Dealing with common Git problems General best practices","title":"Learning Objectives"},{"location":"tutorials/github/#schedule","text":"Time Section Summary 15 min Getting started Review of the command line, filesystem navigation and JupyterLab environment 15 min Git fundamentals Basic concepts of commits and repositories, working with init/diff/add and commit. 20 min Group Activity In small groups, everyone experiements with adding and committing to a test repository, learning about merge conflicts. 20 min GitHub in the Hackweek Demonstrate specific Git workflows relevant to the upcoming hackweek tutorials and projects 10 min Summary Overview of what comes next and discussion of common challenges and frustrations if this is new!","title":"Schedule"},{"location":"tutorials/jupyter/","text":"Introduction to Jupyter This tutorial is in development and this page is being continually updated. You may visit our 2019 iPython/Jupyter tutorials page for details on what will be taught.","title":"Introduction to Jupyter"},{"location":"tutorials/jupyter/#introduction-to-jupyter","text":"This tutorial is in development and this page is being continually updated. You may visit our 2019 iPython/Jupyter tutorials page for details on what will be taught.","title":"Introduction to Jupyter"},{"location":"tutorials/python/","text":"Introduction to Python This lesson provides an introduction to numpy, matplotlib, Pandas and geopandas. This tutorial is in development and this page is being continually updated.","title":"Introduction to Python"},{"location":"tutorials/python/#introduction-to-python","text":"This lesson provides an introduction to numpy, matplotlib, Pandas and geopandas. This tutorial is in development and this page is being continually updated.","title":"Introduction to Python"}]}